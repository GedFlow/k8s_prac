# 커스텀 가능한 values의 default 값

ingress:
  enabled: true
  # DNS 호스트 이름 설정 (이름 변경 시 TLS-Termination 설정이 정상 적용되지 않을 수 있음)
  host: diary.com

# 2. Persistent Volume(PV) 설정
persistence:
  enabled: true
  # pvc 삭제시 pv 처리 방식 설정 [Retain / Recycle / Delete]
  reclaimPolicy: Retain
  # type: [hostPath / nfs] 
  type: hostPath
  # [Retain / Recycle / Delete]
  reclaimPolicy: Retain
  # 스토리지 크기 설정
  size: 1Gi
  # 스토리지 접근 모드 설정 [ReadWriteOnce / ReadWriteMany] (hostPath=RWO, NFS=RWM)
  accessMode: ReadWriteOnce
  # 스토리지 클래스 이름
  storageClassName: my-pv

  # hostPath 선택 시 사용할 설정
  hostPath:
    path: /srv/hostPath-volume

  # nfs 선택 시 사용할 설정
  nfs:
    # 3. NFS 서버 IP
    serverIp: 192.168.100.25
    path: /srv/nfs-volume

#############################
# 여기까지가 custom values  #
#############################

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: nginx
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}
podSecurityContext: {}
securityContext: {}

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

resources: {}

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/

# Additional volumes on the output Deployment definition.
volumes: []

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
nodeSelector: {}
tolerations: []
affinity: {}
